import type { CardTemplate } from '@mse/types';
const Template: CardTemplate = {
  id: 'M15',
  components: {
    card: {
      root: { position: 'relative', width: 375, height: 523, color: 'black' },
    },
    background: {
      root: {
        height: '100%',
        width: '100%',
        left: 0,
        top: 0,
        zIndex: 1,
        position: 'absolute',
        borderRadius: 18,
        overflow: 'hidden',
        backgroundSize: 'cover',
      },
    },
    topLine: {
      root: {
        width: 'auto',
        position: 'absolute',
        top: 30,
        left: 32,
        right: 26,
        height: 23,
        // background: 'rgba(255,0,0,.5)',
        zIndex: 2,
        display: 'flex',
        flexFlow: 'row nowrap',
        alignItems: 'center',
        justifyContent: 'space-between',
        fontFamily: 'beleren',
      },
      name: { fontSize: 16 / 16 + 'em', height: '100%', flex: '0 1 100%' },
      cost: {
        minWidth: 5,
        fontSize: 18 / 16 + 'em',
        height: '100%',
        flex: '0 0 auto',
      },
      symbol: {},
      symbolBackground: { filter: 'drop-shadow(-2px 4px 2px rgb(0 0 0))' },
    },

    typeLine: {
      root: {
        width: 310,
        position: 'absolute',
        top: 296,
        // paddingTop: '1%',
        left: 32,
        //right: ,
        height: 20,
        // background: 'rgba(0,255,0,.5)',
        zIndex: 2,
        display: 'flex',
        alignItems: 'flex-end',
        justifyContent: 'flex-start',
        flexFlow: 'row nowrap',
      },
      divider: {
        fontSize: 13 / 16 + 'em',
        fontFamily: 'beleren',
        marginLeft: '.5em',
        marginRight: '.5em',
      },
      input: {
        minWidth: '1em',
        fontFamily: 'beleren',
        fontSize: 13 / 16 + 'em',
      },
      setSymbol: {},
    },
    powerToughness: {
      root: {
        position: 'absolute',
        backgroundRepeat: 'no-repeat',
        backgroundPosition: 'center center',
        left: 283,
        top: 466,
        width: 69,
        height: 35,
        backgroundSize: '100% 100%',
        zIndex: 3,
        fontFamily: 'beleren',
        fontSize: '1em',
        lineHeight: 1.5,
      },
      label: {
        fontSize: '1em',
        textAlign: 'center',
        width: 60,
        height: 28,
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        position: 'absolute',
        left: '54%',
        top: '50%',
        transform: 'translate(-50%,-50%)',
      },
      divider: {
        fontSize: '1em',
        textAlign: 'center',
        width: '1em',

        position: 'absolute',
        left: '50%',
        top: '50%',
        transform: 'translate(-50%,-50%)',
        height: 100 + '%',
      },
      power: {
        fontSize: '1em',
        position: 'relative',
        flex: '0 0 30%',
        height: 100 + '%',

        marginRight: '.25em',
        textAlign: 'right',
      },
      toughness: {
        fontSize: '1em',
        position: 'relative',
        flex: '0 0 30%',
        height: 100 + '%',
        marginLeft: '.25em',
        textAlign: 'left',
      },
    },

    textBox: {
      root: {
        width: 310,
        position: 'absolute',
        top: 327,
        left: 29,
        //right: '8.5%',
        height: 154,
        // background: 'rgba(0,0,255,.5)',
        zIndex: 2,
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'flex-start',
        flexFlow: 'column nowrap',
        padding: '0 4px 0 6px',

        fontSize: 16 / 16 + 'em',
        lineHeight: 1.2,
      },
      rulesText: {
        display: 'inline',
        fontFamily: 'mplantin',
      },
      flavorText: {
        display: 'inline',
        fontFamily: 'mplantin',
        fontStyle: 'italic',
        fontWeight: 400,
        // marginBottom: '1.5%',
        minHeight: 1,
        minWidth: '1em',
      },
      textBoxDivider: {
        display: 'block',
        width: '80%',
        margin: '3% auto',
        height: '1px',
        flex: '0 0 1px',
        background:
          'linear-gradient(90deg, transparent 0%,black 20%, black 50% ,black 80%, transparent 100% );',
      },
      symbolBackground: { filter: 'drop-shadow(-2px 4px 2px rgb(0 0 0))' },

      input: { display: 'inline', whiteSpace: 'pre-wrap' },
    },

    artwork: {
      root: {
        width: 316,
        position: 'absolute',
        top: 60,
        left: 29,
        right: 375 - 316,
        height: 231,
        // background: 'rgba(255,255,0,.5)',
        zIndex: 3,
        objectFit: 'contain',
        backgroundSize: 'cover',
      },
    },
    input: { root: {} },
    symbol: { root: {} },
  },
};
export default Template;
